# Default configuration that all Overcommit configurations inherit from.
#
# This is an opinionated list of which hooks are valuable to run and what their
# out-of-the-box settings should be.

# Where to store hook plugins specific to a repository. These are loaded in
# addition to the default hooks Overcommit comes with. The location is relative
# to the root of the repository.
plugin_directory: '.git-hooks'

# Whether to check if a hook plugin has changed since Overcommit last ran it.
# This is a defense mechanism when working with repositories which can contain
# untrusted code (e.g. when you fetch a pull request from a third party).
# See https://github.com/causes/overcommit#security for more information.
verify_plugin_signatures: true

# Hooks that run after HEAD changes or a file is explicitly checked out. Useful
# for updating source tags (e.g. via ctags) or warning about new migrations,
# etc.
PostCheckout:
  ALL:
    required: false
    quiet: false
  IndexTags:
    enabled: false
    description: 'Generating tags file from source'

# Hooks that are run after `git commit` is executed, before the commit message
# editor is displayed. These hooks are ideal for syntax checkers, linters, and
# other checks that you want to run before you allow a commit object to be
# created.
PreCommit:
  ALL:
    requires_files: true
    required: false
    quiet: false

  AuthorEmail:
    description: 'Checking author email'
    requires_files: false
    required: true
    quiet: true
    pattern: '^[^@]+@.*$'

  AuthorName:
    description: 'Checking for author name'
    requires_files: false
    required: true
    quiet: true

  BerksfileCheck:
    description: 'Checking Berksfile lock'
    required_executable: 'berks'
    install_command: 'gem install berks'
    include:
      - 'Berksfile'
      - 'Berksfile.lock'

  Brakeman:
    enabled: false
    description: 'Checking for security vulnerabilities'
    required_executable: 'brakeman'
    install_command: 'gem install brakeman'
    include:
      - '**/*.rb'

  BrokenSymlinks:
    description: 'Checking for broken symlinks'
    quiet: true

  BundleCheck:
    description: 'Checking Gemfile dependencies'
    required_executable: 'bundle'
    install_command: 'gem install bundler'
    include:
      - 'Gemfile'
      - 'Gemfile.lock'
      - '*.gemspec'

  ChamberSecurity:
    enabled: false
    description: 'Checking that settings have been secured with Chamber'
    required_executable: 'chamber'
    install_command: 'gem install chamber'
    include:
      - 'config/settings.yml'
      - 'config/settings/**/*.yml'

  CoffeeLint:
    description: 'Analyzing with coffeelint'
    required_executable: 'coffeelint'
    install_command: 'npm install -g coffeelint'
    include: '**/*.coffee'

  CssLint:
    description: 'Analyzing with csslint'
    required_executable: 'csslint'
    install_command: 'npm install -g csslint'
    include: '**/*.css'

  GoLint:
    description: 'Analyzing with golint'
    required_executable: 'golint'
    install_command: 'go get github.com/golang/lint/golint'
    include: '**/*.go'

  HamlLint:
    description: 'Analyzing with haml-lint'
    required_executable: 'haml-lint'
    install_command: 'gem install haml-lint'
    include: '**/*.haml'

  HardTabs:
    description: 'Checking for hard tabs'
    exclude:
      - '**/*.go'
      - '**/Makefile'
      - '.gitmodules'

  ImageOptim:
    description: 'Checking for optimizable images'
    include:
      - '**/*.gif'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.png'

  Jscs:
    description: 'Analyzing with JSCS'
    required_executable: 'jscs'
    install_command: 'npm install -g jscs'
    include: '**/*.js'

  Jsxcs:
    description: 'Analyzing with JSXCS'
    required_executable: 'jsxcs'
    install_command: 'npm install -g jsxcs'
    include: '**/*.jsx'

  JsHint:
    description: 'Analyzing with JSHint'
    required_executable: 'jshint'
    install_command: 'npm install -g jshint'
    include: '**/*.js'

  JsonSyntax:
    description: 'Validating JSON syntax'
    include: '**/*.json'

  JsxHint:
    description: 'Analyzing with JSXHint'
    required_executable: 'jsxhint'
    install_command: 'npm install -g jsxhint'
    include: '**/*.jsx'

  LocalPathsInGemfile:
    description: 'Checking for local paths in Gemfile'
    include: '**/Gemfile'

  MergeConflicts:
    description: 'Checking for merge conflicts'

  PryBinding:
    description: 'Checking for instances of binding.pry'
    include:
      - '**/*.rb'
      - '**/*.rake'

  PythonFlake8:
    description: 'Analyzing with flake8'
    required_executable: 'flake8'
    install_command: 'pip install flake8'
    include: '**/*.py'

  RailsSchemaUpToDate:
    description: 'Checking if database schema is up to date'
    include:
      - 'db/migrate/*.rb'
      - 'db/schema.rb'
      - 'db/structure.sql'

  Reek:
    description: 'Analyzing with Reek'
    required_executable: 'reek'
    install_command: 'gem install reek'
    include:
      - '**/*.gemspec'
      - '**/*.rake'
      - '**/*.rb'
      - '**/Gemfile'
      - '**/Rakefile'

  Rubocop:
    description: 'Analyzing with Rubocop'
    required_executable: 'rubocop'
    install_command: 'gem install rubocop'
    include:
      - '**/*.gemspec'
      - '**/*.rake'
      - '**/*.rb'
      - '**/Gemfile'
      - '**/Rakefile'

  ScssLint:
    description: 'Analyzing with scss-lint'
    required_executable: 'scss-lint'
    install_command: 'gem install scss-lint'
    include: '**/*.scss'

  TrailingWhitespace:
    description: 'Checking for trailing whitespace'
    exclude:
      - '**/db/structure.sql'

  TravisLint:
    description: 'Checking Travis CI configuration'
    required_executable: 'travis-lint'
    install_command: 'gem install travis-lint'
    include: '.travis.yml'

  YamlSyntax:
    description: 'Checking YAML syntax'
    include: '**/*.yml'

# Hooks that are run against every commit message after a user has written it.
# These hooks are useful for enforcing policies on commit messages written for a
# project.
CommitMsg:
  ALL:
    requires_files: false
    quiet: false

  GerritChangeId:
    enabled: false
    description: 'Ensuring Gerrit Change-Id is present'
    required: true

  HardTabs:
    description: 'Checking for hard tabs'

  RussianNovel:
    description: 'Checking length of commit message'
    quiet: true

  SingleLineSubject:
    description: 'Checking subject line'

  TextWidth:
    description: 'Checking text width'
    max_subject_width: 60
    max_body_width: 72

  TrailingPeriod:
    description: 'Checking for trailing periods in subject'
